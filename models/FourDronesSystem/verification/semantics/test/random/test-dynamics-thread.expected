==========================================
rewrite in TEST-THREAD-DYNAMICS : execSample({thread,0}) .
rewrites: 69
result ConfigWithRand: {< controller : Thread | properties : ((
    TimingProperties::Period => {{5}}) ; (HybridSynchAADL::SamplingTime => {{
    0.0 .. 2.0}}) ; HybridSynchAADL::ResponseTime => {{3.0 .. 4.0}}),features :
    (< on : DataOutPort | properties : none,content : * # [false] > < off :
    DataOutPort | properties : none,content : * # [false] > < temp : DataInPort
    | properties : none,content : [0.0] # [false],cache : [0.0] # [false] >),
    subcomponents : (< lower : Data | properties : DataModel::InitialValue => {
    {10}},features : none,subcomponents : none,connections : empty,value : [
    1.0e+1] # [true] > < upper : Data | properties : DataModel::InitialValue =>
    {{30}},features : none,subcomponents : none,connections : empty,value : [
    3.0e+1] # [true] > < curr : Data | properties : DataModel::InitialValue =>
    {{0}},features : none,subcomponents : none,connections : empty,value : [
    0.0] # [true] >),connections : empty,varGen : < "top.controller" >,
    currState : l1,completeStates : l1,variables : x : Real,transitions : ((l1
    -[on dispatch]-> l2 {(v{x} := ((c[curr] + f[temp]) / [[2]])) ; if(v[x] < c[
    lower])(on !) (elsif(v[x] > c[upper])off !) end if ; c{curr} := v[x]}) ; l2
    -[otherwise]-> l1 {skip}),loopBound : 0,transBound : 2 >,0}
==========================================
rewrite in TEST-THREAD-DYNAMICS : execResponse({thread,0}) .
rewrites: 69
result ConfigWithRand: {< controller : Thread | properties : ((
    TimingProperties::Period => {{5}}) ; (HybridSynchAADL::SamplingTime => {{
    0.0 .. 2.0}}) ; HybridSynchAADL::ResponseTime => {{3.0 .. 4.0}}),features :
    (< on : DataOutPort | properties : none,content : * # [false] > < off :
    DataOutPort | properties : none,content : * # [false] > < temp : DataInPort
    | properties : none,content : [0.0] # [false],cache : [0.0] # [false] >),
    subcomponents : (< lower : Data | properties : DataModel::InitialValue => {
    {10}},features : none,subcomponents : none,connections : empty,value : [
    1.0e+1] # [true] > < upper : Data | properties : DataModel::InitialValue =>
    {{30}},features : none,subcomponents : none,connections : empty,value : [
    3.0e+1] # [true] > < curr : Data | properties : DataModel::InitialValue =>
    {{0}},features : none,subcomponents : none,connections : empty,value : [
    0.0] # [true] >),connections : empty,varGen : < "top.controller" >,
    currState : l1,completeStates : l1,variables : x : Real,transitions : ((l1
    -[on dispatch]-> l2 {(v{x} := ((c[curr] + f[temp]) / [[2]])) ; if(v[x] < c[
    lower])(on !) (elsif(v[x] > c[upper])off !) end if ; c{curr} := v[x]}) ; l2
    -[otherwise]-> l1 {skip}),loopBound : 0,transBound : 2 >,0}
==========================================
rewrite in TEST-THREAD-DYNAMICS : executeStep({thread,0}) .
rewrites: 263
result [ConfigWithRand]: execThread(< controller : Thread | properties : ((
    TimingProperties::Period => {{5}}) ; (HybridSynchAADL::SamplingTime => {{
    0.0 .. 2.0}}) ; HybridSynchAADL::ResponseTime => {{3.0 .. 4.0}}),features :
    (< on : DataOutPort | properties : none,content : * # [false] > < off :
    DataOutPort | properties : none,content : * # [false] > < temp : DataInPort
    | properties : none,content : [0.0] # [false],cache : [0.0] # [false] >),
    subcomponents : (< lower : Data | properties : DataModel::InitialValue => {
    {10}},features : none,subcomponents : none,connections : empty,value : [
    1.0e+1] # [true] > < upper : Data | properties : DataModel::InitialValue =>
    {{30}},features : none,subcomponents : none,connections : empty,value : [
    3.0e+1] # [true] > < curr : Data | properties : DataModel::InitialValue =>
    {{0}},features : none,subcomponents : none,connections : empty,value : [
    0.0] # [true] >),connections : empty,varGen : < "top.controller" >,
    currState : l1,completeStates : l1,variables : x : Real,transitions : ((l1
    -[on dispatch]-> l2 {(v{x} := ((c[curr] + f[temp]) / [[2]])) ; if(v[x] < c[
    lower])(on !) (elsif(v[x] > c[upper])off !) end if ; c{curr} := v[x]}) ; l2
    -[otherwise]-> l1 {skip}),loopBound : 0,transBound : 2 >, < on :
    DataOutPort | properties : none,content : * # [false] > < off : DataOutPort
    | properties : none,content : * # [false] > < temp : DataInPort |
    properties : none,content : [0.0] # [false],cache : [0.0] # [false] >,
    transBehResult(feature((on |-> * # [true], off |-> * # [false], temp |-> ([
    0.0] # [false] : [false]))) data((lower |=> [1.0e+1] # [true], upper |=> [
    3.0e+1] # [true], curr |=> [0.0] # [true])) prop((TimingProperties::Period
    => {{5}}) ; (HybridSynchAADL::SamplingTime => {{0.0 .. 2.0}}) ;
    HybridSynchAADL::ResponseTime => {{3.0 .. 4.0}}) randC(2) const([false])
    lbound(0) tbound(0) location(l1) trans((l1 -[on dispatch]-> l2 {(v{x} := ((
    c[curr] + f[temp]) / [[2]])) ; if(v[x] < c[lower])(on !) (elsif(v[x] > c[
    upper])off !) end if ; c{curr} := v[x]}) ; l2 -[otherwise]-> l1 {skip})),
    0)
==========================================
rewrite in TEST-THREAD-DYNAMICS : executeStep({thread transIn(real(10) # bool(
    true), controller .. temp),0}) .
rewrites: 279
result ConfigWithRand: {< controller : Thread | properties : ((
    TimingProperties::Period => {{5}}) ; (HybridSynchAADL::SamplingTime => {{
    0.0 .. 2.0}}) ; HybridSynchAADL::ResponseTime => {{3.0 .. 4.0}}),features :
    (< on : DataOutPort | properties : none,content : * # [true] > < off :
    DataOutPort | properties : none,content : * # [false] > < temp : DataInPort
    | properties : none,content : [0.0] # [false],cache : [1.0e+1] # [true] >),
    subcomponents : (< lower : Data | properties : DataModel::InitialValue => {
    {10}},features : none,subcomponents : none,connections : empty,value : [
    1.0e+1] # [true] > < upper : Data | properties : DataModel::InitialValue =>
    {{30}},features : none,subcomponents : none,connections : empty,value : [
    3.0e+1] # [true] > < curr : Data | properties : DataModel::InitialValue =>
    {{0}},features : none,subcomponents : none,connections : empty,value : [
    5.0] # [true] >),connections : empty,varGen : < "top.controller" >,
    currState : l1,completeStates : l1,variables : x : Real,transitions : ((l1
    -[on dispatch]-> l2 {(v{x} := ((c[curr] + f[temp]) / [[2]])) ; if(v[x] < c[
    lower])(on !) (elsif(v[x] > c[upper])off !) end if ; c{curr} := v[x]}) ; l2
    -[otherwise]-> l1 {skip}),loopBound : 0,transBound : 2 >,2}
==========================================
rewrite in TEST-THREAD-DYNAMICS : executeStep({thread transIn(real(0) # bool(
    true), controller .. temp),0}) .
rewrites: 279
result ConfigWithRand: {< controller : Thread | properties : ((
    TimingProperties::Period => {{5}}) ; (HybridSynchAADL::SamplingTime => {{
    0.0 .. 2.0}}) ; HybridSynchAADL::ResponseTime => {{3.0 .. 4.0}}),features :
    (< on : DataOutPort | properties : none,content : * # [true] > < off :
    DataOutPort | properties : none,content : * # [false] > < temp : DataInPort
    | properties : none,content : [0.0] # [false],cache : [0.0] # [true] >),
    subcomponents : (< lower : Data | properties : DataModel::InitialValue => {
    {10}},features : none,subcomponents : none,connections : empty,value : [
    1.0e+1] # [true] > < upper : Data | properties : DataModel::InitialValue =>
    {{30}},features : none,subcomponents : none,connections : empty,value : [
    3.0e+1] # [true] > < curr : Data | properties : DataModel::InitialValue =>
    {{0}},features : none,subcomponents : none,connections : empty,value : [
    0.0] # [true] >),connections : empty,varGen : < "top.controller" >,
    currState : l1,completeStates : l1,variables : x : Real,transitions : ((l1
    -[on dispatch]-> l2 {(v{x} := ((c[curr] + f[temp]) / [[2]])) ; if(v[x] < c[
    lower])(on !) (elsif(v[x] > c[upper])off !) end if ; c{curr} := v[x]}) ; l2
    -[otherwise]-> l1 {skip}),loopBound : 0,transBound : 2 >,2}
==========================================
rewrite in TEST-THREAD-DYNAMICS : executeStep({thread transIn(real(50) # bool(
    true), controller .. temp),0}) .
rewrites: 340
result ConfigWithRand: {< controller : Thread | properties : ((
    TimingProperties::Period => {{5}}) ; (HybridSynchAADL::SamplingTime => {{
    0.0 .. 2.0}}) ; HybridSynchAADL::ResponseTime => {{3.0 .. 4.0}}),features :
    (< on : DataOutPort | properties : none,content : * # [false] > < off :
    DataOutPort | properties : none,content : * # [false] > < temp : DataInPort
    | properties : none,content : [0.0] # [false],cache : [5.0e+1] # [true] >),
    subcomponents : (< lower : Data | properties : DataModel::InitialValue => {
    {10}},features : none,subcomponents : none,connections : empty,value : [
    1.0e+1] # [true] > < upper : Data | properties : DataModel::InitialValue =>
    {{30}},features : none,subcomponents : none,connections : empty,value : [
    3.0e+1] # [true] > < curr : Data | properties : DataModel::InitialValue =>
    {{0}},features : none,subcomponents : none,connections : empty,value : [
    2.5e+1] # [true] >),connections : empty,varGen : < "top.controller" >,
    currState : l1,completeStates : l1,variables : x : Real,transitions : ((l1
    -[on dispatch]-> l2 {(v{x} := ((c[curr] + f[temp]) / [[2]])) ; if(v[x] < c[
    lower])(on !) (elsif(v[x] > c[upper])off !) end if ; c{curr} := v[x]}) ; l2
    -[otherwise]-> l1 {skip}),loopBound : 0,transBound : 2 >,2}
==========================================
rewrite in TEST-THREAD-DYNAMICS : executeStep({thread2 transIn(real(0) # bool(
    true), controller .. temp),0}) .
rewrites: 278
result ConfigWithRand: {< controller : Thread | properties : ((
    TimingProperties::Period => {{5}}) ; (HybridSynchAADL::SamplingTime => {{
    0.0 .. 2.0}}) ; HybridSynchAADL::ResponseTime => {{3.0 .. 4.0}}),features :
    (< on : DataOutPort | properties : none,content : * # [false] > < off :
    DataOutPort | properties : none,content : * # [true] > < temp : DataInPort
    | properties : none,content : [0.0] # [false],cache : [0.0] # [true] >),
    subcomponents : (< lower : Data | properties : DataModel::InitialValue => {
    {10}},features : none,subcomponents : none,connections : empty,value : [
    1.0e+1] # [true] > < upper : Data | properties : DataModel::InitialValue =>
    {{30}},features : none,subcomponents : none,connections : empty,value : [
    3.0e+1] # [true] > < curr : Data | properties : DataModel::InitialValue =>
    {{15}},features : none,subcomponents : none,connections : empty,value : [
    7.5] # [true] >),connections : empty,varGen : < "top.controller" >,
    currState : l1,completeStates : l1,variables : x : Real,transitions : ((l1
    -[on dispatch]-> l2 {(v{x} := ((c[curr] + f[temp]) / [[2]])) ; c{curr} :=
    v[x]}) ; (l2 -[[[true]]]-> l1 {on !}) ; l2 -[[[true]]]-> l1 {off !}),
    loopBound : 0,transBound : 2 >,2}
==========================================
rewrite in TEST-THREAD-DYNAMICS : executeStep({thread2 transIn(real(0) # bool(
    true), controller .. temp),1}) .
rewrites: 278
result ConfigWithRand: {< controller : Thread | properties : ((
    TimingProperties::Period => {{5}}) ; (HybridSynchAADL::SamplingTime => {{
    0.0 .. 2.0}}) ; HybridSynchAADL::ResponseTime => {{3.0 .. 4.0}}),features :
    (< on : DataOutPort | properties : none,content : * # [false] > < off :
    DataOutPort | properties : none,content : * # [true] > < temp : DataInPort
    | properties : none,content : [0.0] # [false],cache : [0.0] # [true] >),
    subcomponents : (< lower : Data | properties : DataModel::InitialValue => {
    {10}},features : none,subcomponents : none,connections : empty,value : [
    1.0e+1] # [true] > < upper : Data | properties : DataModel::InitialValue =>
    {{30}},features : none,subcomponents : none,connections : empty,value : [
    3.0e+1] # [true] > < curr : Data | properties : DataModel::InitialValue =>
    {{15}},features : none,subcomponents : none,connections : empty,value : [
    7.5] # [true] >),connections : empty,varGen : < "top.controller" >,
    currState : l1,completeStates : l1,variables : x : Real,transitions : ((l1
    -[on dispatch]-> l2 {(v{x} := ((c[curr] + f[temp]) / [[2]])) ; c{curr} :=
    v[x]}) ; (l2 -[[[true]]]-> l1 {on !}) ; l2 -[[[true]]]-> l1 {off !}),
    loopBound : 0,transBound : 2 >,3}
==========================================
rewrite in TEST-THREAD-DYNAMICS : executeStep({thread2 transIn(real(0) # bool(
    true), controller .. temp),7}) .
rewrites: 276
result ConfigWithRand: {< controller : Thread | properties : ((
    TimingProperties::Period => {{5}}) ; (HybridSynchAADL::SamplingTime => {{
    0.0 .. 2.0}}) ; HybridSynchAADL::ResponseTime => {{3.0 .. 4.0}}),features :
    (< on : DataOutPort | properties : none,content : * # [true] > < off :
    DataOutPort | properties : none,content : * # [false] > < temp : DataInPort
    | properties : none,content : [0.0] # [false],cache : [0.0] # [true] >),
    subcomponents : (< lower : Data | properties : DataModel::InitialValue => {
    {10}},features : none,subcomponents : none,connections : empty,value : [
    1.0e+1] # [true] > < upper : Data | properties : DataModel::InitialValue =>
    {{30}},features : none,subcomponents : none,connections : empty,value : [
    3.0e+1] # [true] > < curr : Data | properties : DataModel::InitialValue =>
    {{15}},features : none,subcomponents : none,connections : empty,value : [
    7.5] # [true] >),connections : empty,varGen : < "top.controller" >,
    currState : l1,completeStates : l1,variables : x : Real,transitions : ((l1
    -[on dispatch]-> l2 {(v{x} := ((c[curr] + f[temp]) / [[2]])) ; c{curr} :=
    v[x]}) ; (l2 -[[[true]]]-> l1 {on !}) ; l2 -[[[true]]]-> l1 {off !}),
    loopBound : 0,transBound : 2 >,9}
Bye.
