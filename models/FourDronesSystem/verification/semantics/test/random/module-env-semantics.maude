
mod TEST-TRANS is
  inc ENV-TRANSITION-SEMANTICS .

  ops x y : -> ComponentId .
  ops t s : -> VarId .
  ops on1 on2 off1 off2 : -> FeatureId [format (y! o)] .
  ops st1 st2 : -> Location [format (b! o)] .

  op trans : -> Set{EnvJump} .
  eq trans =
    (st1 -[  on1 ]-> st2) ;
    (st2 -[ off1 ]-> st1) .

  op flows : -> Set{EnvFlow} .
  eq flows =
    (st1[(x(t) = c[x] - (v[t] * [[0.1]]))]) ;
    (st2[(x(t) = c[x] + (v[t] * [[0.2]]))]) .
endm


mod TEST-ENV-TRANSITION-SEMANTICS is
  inc TEST-TRANS .
  inc ENV-DYNAMICS .

  ops cr1 cr2 : -> ComponentId [format (c! o)] .
  ops a b : -> FeatureId [format (b! o)] .

  op bcf : -> BehaviorConf .
  eq bcf = 
      feature((
          (on1  |-> real(0) # bool(true)  : bool(true)), 
          (on2  |-> real(0) # bool(false) : bool(true)),
          (off1 |-> real(0) # bool(false) : bool(true)),
          (off2 |-> real(0) # bool(true)  : bool(true))
      ))
      data((
          (x |=> real(3/4) # bool(true)), 
          (y |=> real(100) # bool(true))
      )) 
      prop((TimingProperties::Period => {{5}}) ; (HybridSynchAADL::MaxClockDeviation => {{0.5}})) .

  op conx : -> Set{Connection} .
  eq conx = (x ==> a) ; (y ==> b) .

  op envports : -> Configuration .
  eq envports =
         < on1 :  EnvInPort | target : cr1, content : bot(Real), envCache : bot(Real) >
         < on2 :  EnvInPort | target : cr2, content : bot(Real), envCache : bot(Real) > 
         < off1 : EnvInPort | target : cr1, content : bot(Real), envCache : bot(Real) >
         < off2 : EnvInPort | target : cr2, content : bot(Real), envCache : bot(Real) > 
         < a : EnvOutPort | target : cr1, content : bot(Real), envCache : bot(Real) >
         < b : EnvOutPort | target : cr2, content : bot(Real), envCache : bot(Real) > .
endm
